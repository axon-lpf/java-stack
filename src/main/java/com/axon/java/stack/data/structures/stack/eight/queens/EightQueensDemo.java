package com.axon.java.stack.data.structures.stack.eight.queens;

/**
 * 8皇后问题， 也是使用了回溯算法，去解决问题
 * <p>
 * 八皇后问题通常使用的是回溯算法（Backtracking Algorithm）来解决。
 * <p>
 * 回溯算法的基本思想：
 * <p>
 * 1.	从第一个皇后开始，依次尝试把皇后放在每一行的不同列上。
 * 2.	放置每个皇后时，检查当前皇后是否与之前放置的皇后冲突（即是否在同一行、列或对角线上）。
 * 3.	如果不冲突，则继续放置下一个皇后；如果冲突，则回溯到上一步，尝试其他列的位置。
 * 4.	重复这一过程，直到找到一个满足条件的解，或者遍历所有可能的位置组合。
 * <p>
 * 使用回溯法解决八皇后问题的特点：
 * <p>
 * •	深度优先搜索：回溯会在搜索树的每一个分支中进行尝试，直到找到一个解或确定某个分支无解。
 * •	剪枝：当发现某个位置不符合要求时，立即放弃继续尝试该分支，并回到上一步，减少不必要的计算。
 * <p>
 * 通过回溯法，能够有效地找到八皇后问题的所有解。
 */
public class EightQueensDemo {

    public static void main(String[] args) {

    }

}
