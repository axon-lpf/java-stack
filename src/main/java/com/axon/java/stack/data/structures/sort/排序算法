常见的排序算法可以分为以下几类：

1. 交换排序

	•	冒泡排序（Bubble Sort）: 通过重复地遍历列表，比较相邻的元素并交换它们来将最大（或最小）的元素“冒泡”到列表的末端。
	•	快速排序（Quick Sort）: 通过选择一个基准元素（pivot），将数组分为两部分，使得基准左边的元素都比基准小，右边的元素都比基准大，然后递归地对左右两部分进行排序。

2. 选择排序

	•	选择排序（Selection Sort）: 每次遍历找出最小或最大的元素，放在已排序序列的末尾，重复直到排序完成。
	•	堆排序（Heap Sort）: 使用堆这种数据结构，每次从堆中取出最大值或最小值，放入已排序部分。

3. 插入排序

	•	直接插入排序（Insertion Sort）: 将数组分为已排序和未排序部分，每次从未排序部分取一个元素，插入到已排序部分的适当位置。
	•	希尔排序（Shell Sort）: 是插入排序的一种优化版，通过逐渐缩小步长，使数据逐渐有序，最后进行直接插入排序。

4. 归并排序

	•	归并排序（Merge Sort）: 采用分治思想，将数组分为两部分分别排序，然后将排好序的两部分合并。

5. 计数排序

	•	计数排序（Counting Sort）: 适合对整数范围较小的数组进行排序，计数数组中每个索引存储对应元素的出现次数，然后按顺序输出。

6. 桶排序

	•	桶排序（Bucket Sort）: 将数据分布到多个桶中，每个桶再单独进行排序，最后合并桶中的数据。

7. 基数排序

	•	基数排序（Radix Sort）: 根据数据的每个位数进行排序，先排最低位，再依次对更高位进行排序，最终获得结果。

8. 其他排序

	•	归并插入排序（Tim Sort）: 是归并排序和插入排序的结合，现代编程语言中的默认排序算法之一（如Java、Python）。

各个排序算法的时间复杂度、空间复杂度和适用场景各不相同。