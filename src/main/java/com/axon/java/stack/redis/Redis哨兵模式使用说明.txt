Redis 的哨兵模式（Sentinel Mode）是 Redis 集群中用于实现高可用性的一种机制。哨兵模式的主要作用是 监控 Redis 主从结构，当主节点出现故障时，能够自动选举新的主节点，保证服务的持续可用。

Redis 哨兵模式的组成

哨兵模式主要由三部分组成：

	1.	主节点（Master）：负责处理读写请求，并复制数据到从节点。
	2.	从节点（Slave）：负责数据备份，只能处理读请求。
	3.	哨兵节点（Sentinel）：监控 Redis 主从节点的状态，负责自动化的故障转移和通知。

哨兵模式的工作原理

哨兵模式通过多哨兵监控主从结构，并通过选举来保证高可用性。其工作原理可以分为以下几个步骤：

1. 监控 Redis 主从节点

每个哨兵节点会定期向主节点、从节点以及其他哨兵节点发送 PING 命令，以检查这些节点的健康状态。

	•	如果某个节点未在指定时间内响应 PING，哨兵节点会认为该节点主观下线（subjectively down, SDOWN）。
	•	如果多数哨兵节点都认为主节点下线，那么这个主节点将被判定为客观下线（objectively down, ODOWN）。

2. 故障转移

当主节点被多个哨兵节点判定为客观下线时，哨兵集群将进行故障转移（Failover）。故障转移的流程如下：

	•	选举新的主节点：哨兵通过 Raft 算法选举出一个哨兵节点作为领头哨兵（Leader），负责进行主从切换。
	•	选举从节点为新的主节点：领头哨兵会从现有的从节点中选择一个最合适的节点提升为新的主节点，选择标准包括复制偏移量、从节点的响应时间等。
	•	更新配置：选出的新主节点将接管原主节点的角色，并且所有其他从节点将被重新配置为从新主节点同步数据。
	•	通知客户端：哨兵节点会通知客户端，新的主节点地址已经更换，客户端可以继续连接新主节点进行读写操作。

3. 配置更新

哨兵节点不仅监控故障和执行故障转移，还会定期同步主从配置，确保所有哨兵节点都持有最新的主从关系信息。当主节点变化时，哨兵会将这些变化通知给其他哨兵、从节点以及客户端。

4. 通知机制

哨兵可以通过发布/订阅（Pub/Sub）机制向系统管理员或客户端发送通知，告知系统中发生的主从切换或节点的健康状态。这种通知机制确保管理员可以在系统发生故障或主从切换时，及时了解集群状态。

哨兵模式的核心功能

哨兵模式通过以下几个核心功能实现 Redis 集群的高可用性：

	1.	监控：哨兵监控 Redis 节点的健康状态，检测主从节点的正常与否。
	2.	故障自动转移：当主节点故障时，哨兵自动进行故障转移，选举一个新的主节点。
	3.	配置自动更新：在故障转移后，哨兵自动更新集群中的主从配置，并将变化通知客户端。
	4.	高可用性保障：哨兵通过监控、选举和通知机制保证 Redis 集群在节点故障时仍能提供高可用服务。

哨兵模式的优势

	1.	自动化管理：哨兵模式无需手动干预，可以自动监控、故障转移和恢复集群。
	2.	高可用性：哨兵模式保证了 Redis 集群在主节点宕机时依然能够持续提供服务。
	3.	分布式选举：通过分布式选举机制，防止单点故障，确保新的主节点选举过程公平且可靠。

小结

Redis 哨兵模式通过监控主从节点、故障检测、自动化故障转移和通知，提供了一个强大的高可用方案。它解决了 Redis 在单主节点情况下的高可用性问题，保证了集群在主节点宕机时可以自动恢复，并且避免了服务中断的风险。





那服务连接redis时，是连接redis哨兵还是连接redis的主节点？


具体工作流程如下：

1. 连接哨兵

客户端首先连接到 Redis 哨兵，而不是直接连接主节点。哨兵通过监听和监控集群中的 Redis 实例，能够识别并知道当前的主节点是谁。

2. 获取主节点信息

客户端通过哨兵命令（如 SENTINEL get-master-addr-by-name <master-name>），从哨兵处获取当前的主节点地址。哨兵负责跟踪集群中的主从变化，因此它始终能够提供最新的主节点信息。

3. 连接主节点

客户端获取到主节点信息后，再去直接连接主节点进行读写操作。如果主节点发生了故障并且进行了故障转移，哨兵会更新主节点信息，并且在下次客户端查询时，返回新的主节点地址。

4. 处理主节点故障

如果 Redis 主节点发生故障，哨兵会检测到这一情况，进行故障转移，将其中一个从节点提升为新的主节点。客户端下一次查询哨兵时，就会获取到新主节点的地址，无需客户端手动干预。

总结

	•	客户端通过哨兵动态获取主节点的地址，确保连接始终指向当前的主节点，即使发生故障转移。
	•	直接连接主节点可能会导致主节点切换后无法及时连接新主节点，而通过哨兵则可以动态适应主从切换，保持高可用性。





