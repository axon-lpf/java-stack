基数排序（Radix Sort）是一种非比较型整数排序算法，主要用于按位数（如个位、十位、百位等）进行排序，通过逐步对每一位数值进行桶分配与收集来完成排序。基数排序一般分为LSD（Least Significant Digit） 和 MSD（Most Significant Digit） 两种方法，常用的是 LSD 方法，即从最低位开始排序。

基数排序算法的工作原理

	1.	选择最大位数：找到数组中位数最多的数字，这决定了需要排序的轮数。例如，数字 214 需要排序 3 轮（个位、十位和百位）。
	2.	逐位排序：对每一位（从最低位开始），按照该位的值将数字分配到 0-9 的桶中。
	3.	桶排序收集：依次将每个桶的数据收集回数组，得到按照该位数排序后的新数组。
	4.	循环处理各位：逐一处理从个位、十位、百位，直到所有位数完成排序。

算法步骤（以LSD为例）

假设数组为 {53, 3, 542, 748, 14, 214}：

	1.	个位排序：按照个位分桶并收集。
	2.	十位排序：将上一步结果按照十位分桶并收集。
	3.	百位排序：将上一步结果按照百位分桶并收集。

最后，所有数字按照从低位到高位的顺序排序完成。

时间与空间复杂度

	•	时间复杂度：O(d \times (n + k))，其中 d 为最大数字的位数，n 为数组元素个数，k 为基数（在十进制中为10）。
	•	空间复杂度：O(n + k)，需要额外的桶空间。

基数排序的优缺点

	•	优点：
	•	可以线性时间完成排序，适用于数据范围较大且位数较短的情况。
	•	不需要比较，效率较高，适合整数、字符串排序。
	•	缺点：
	•	需要额外空间存储桶，空间消耗较大。
	•	对于位数较多的数据，效率会有所下降。

适用场景

基数排序适合用于排序整数和固定长度字符串。在需要对大量、位数相对有限的数据进行排序时，基数排序表现优异。