贪心算法是一种解决优化问题的策略，它通过每一步都选择当前看起来最优的选项，期望通过局部最优选择最终得到全局最优解。贪心算法的关键在于是否能够保证通过这种局部最优选择能得到全局最优解。

特点
    局部最优选择：在每一步选择中都选择当前状态下的最好选项。
    无后效性：当前的选择不会影响之后的选择。
    最优子结构：问题的最优解包含其子问题的最优解。
优缺点
    优点：
        简单易懂，通常实现起来比较简单。
        在很多情况下，贪心算法能在较短的时间内给出结果，时间复杂度较低。
    缺点：
        并非所有问题都适用，贪心策略有时会导致错误的结果。
        需要证明贪心选择的有效性才能确保解的最优性。


贪心算法适用于以下几种场景：
    最优子结构：问题的最优解可以由其子问题的最优解构成。
    无后效性：当前的选择不会影响后续选择的可行性。
    选择性质：存在某种性质，使得局部最优选择可以导出全局最优解。
适用场景示例：
    活动选择问题：选择最大数量的不重叠活动。
    最小生成树：如普利姆算法和克鲁斯卡尔算法，用于图的最小生成树构造。
    哈夫曼编码：用于数据压缩，构建最优前缀编码。
    零钱问题：找零问题（适用于某些货币系统），选择最少的硬币数量。
    任务调度：在有限时间内选择尽可能多的可完成任务。
    区间调度：选择不重叠的区间集合。