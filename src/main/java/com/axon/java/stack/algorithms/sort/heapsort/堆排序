 * 疑问解答：
 * 1.最大堆构建完成之后，后面的为什么需要排序？
 *      最大堆构建完成后，堆排序的目标是将堆中的元素按升序（或降序）排列。因此，还需要后续的排序步骤来实现这一点。具体来说，构建最大堆只是堆排序的第一步，接下来才是真正的排序过程。
 *
     * 原理解释
     *
     * 堆排序的核心在于：
     *
     * 	1.	构建最大堆：将无序数组调整成最大堆，使堆顶元素为最大值。
     * 	2.	排序过程：最大堆构建完成后，通过不断地将堆顶元素（当前最大值）与末尾元素交换，确保每次交换后，最大的元素被放到数组的正确最终位置上。
     *
     * 为什么需要继续排序
     *
     * 在最大堆中，只有堆顶元素是最大值，其他元素不保证有序。因此，为了完成排序：
     *
     * 	1.	每次取出堆顶元素：即当前最大值，把它放到数组的尾部。
     * 	2.	重新调整剩余部分为最大堆：交换堆顶与末尾后，堆的结构被破坏，因此需要重新调整剩下的元素，确保新的堆顶为当前最大值。
     * 	3.	重复上述操作：不断缩小堆的范围，将次大的值逐步放到倒数第二的位置，直到排序完成。
     *
     * 通过不断交换和重新调整堆结构，最终整个数组才能从大到小（或从小到大）完全有序。
 *
 *
 * 2.为什么要先构建成一个大顶堆呢？  为何又在后面排序的过程中再次去构建顶堆呢？  而不是在排序的过程去构建，非要第一步构建成一个大顶堆？
 *      1. 构建大顶堆：创建最大元素的结构基础
 *
     * 将无序数组一次性构建成大顶堆，确保堆顶（根节点）是数组的最大元素。这是堆排序的基础，因为构建完大顶堆后，我们可以快速确定数组中最大元素的位置。
     *
     * 2. 排序阶段：提取最大元素并维护堆结构
     *
     * 在大顶堆的基础上，堆排序通过以下步骤实现：
     *
     * 	1.	交换堆顶和最后一个元素：堆顶是最大元素，交换到数组末尾后，便确定了当前最大元素的位置。
     * 	2.	调整剩余部分为大顶堆：将剩下的元素重新调整成大顶堆，保证新的堆顶是剩余元素中的最大值。通过维护大顶堆的方式，使得每次都能提取到剩余元素中的最大值。
     *
     * 为什么要先构建大顶堆？
     *
     * 如果不先构建大顶堆，而是直接在排序过程中逐步构建，每次都要找到当前范围中的最大值，导致大量重复比较，效率低下。一次性建堆利用了逐层筛选和交换的特性，使得整个过程的时间复杂度为 O(n \log n)。
     *
     * 大顶堆构建和排序过程中的堆维护
     *
     * 在排序阶段维护堆结构（而非重建）具有更高效率。只需在交换后自上而下地调整堆的局部结构，这种做法的成本远低于每次完全重构堆的代价，能够显著提高排序速度。
     *
     * 这种分两步处理的方式，实际上是充分利用了堆的层级结构特性和数组顺序存储特性的结合，保证了排序的稳定性和高效性。
 *