package com.axon.java.stack.algorithms.kruskal;

/**
 *  克鲁斯卡尔算法.txt
 *   解决公交车问题
 *
 *    克鲁斯卡尔算法介绍
 * 1)克鲁斯卡尔(Kruskal)算法，是用来求加权连通图的最小生成树的算法。（最小生成树也可以通过普里姆算法生成，具体可参考算法其实很简单—普利姆算法）
 *
 * 2)基本思想:按照权值从小到大的顺序选择n-1条边，并保证这n-1条边不构成回路
 *
 * 3)具体做法:首先构造一一个只含n个顶点的森林，然后依权值从小到大从连通网中选择边加入到森林中，并使森林中不产生回路，直至森林变成一棵树为止
 *
 *
 * 1)某城市新增7个站点(A,B,C,D,E,F,G)， 现在需要修路把7个站点连通
 *
 * 2)各个站点的距离用边线表示(权)，比如A-B距离12公里
 *
 * 3) 问:如何修路保证各个站点都能连通，并且总的修建公路总里程最短?
 *
 * 参考博客地址: https://blog.csdn.net/guozhangjie1992/article/details/106821932
 *
 *
 * 核心步骤：
 *  1.构建邻结矩阵
 *  2.构建一个边的集合，   EData { start, end, weight }
 *  3.将这个集合按照从小到大顺序排列
 *  4.添加获取顶点点下标的方法
 *  5.获取顶点下标的终点的方法
 *  6.判断两者的终点是否一致， 不一致，则加入返回结果中去。
 *
 */
public class KruskalAlgorithm {


    public static void main(String[] args) {

    }
}
